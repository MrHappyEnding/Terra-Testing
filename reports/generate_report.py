import os
import re
import datetime
import yaml

def generate_html_report(logdir, configs):
    filepath = os.path.join(logdir, "index.html")
    os.makedirs(logdir, exist_ok=True)
    with open(filepath, "w") as html:
        html.write("""
        <!DOCTYPE html>
        <html>
        <head>
            <title>Redis Compatibility Test Report</title>
            <style>
                table {border-collapse: collapse; width: 100%;}
                th, td {border: 1px solid black; padding: 8px; text-align: center;}
                th {background-color: #f2f2f2;}
            </style>
        </head>
        <body>
        <h1>Redis Compatibility Test Report</h1>
        <p>This page is automatically generated by <a href="https://github.com/tair-opensource/compatibility-test-suite-for-redis">compatibility-test-suite-for-redis</a> to show the compatibility of the following Redis-Like systems and different versions of Redis.</p>
        <table>
            <thead>
                <tr>
                    <th>Product / Redis Version</th>
        """)

        for version in configs['SpecificVersion']:
            html.write(f"<th>{version}</th>")

        html.write("</tr></thead><tbody>")

        for db_name, db_config in configs['Database'].items():
            html.write(f"<tr><td>{db_name} ({db_config['version']})</td>")
            for version in configs['SpecificVersion']:
                result_file = os.path.join(logdir, f"{db_name}-{version}.txt")
                if not os.path.exists(result_file):
                    html.write("<td>-</td>")
                    continue
                with open(result_file, 'r') as f:
                    content = f.read()
                match = re.search(r"rate: (\d+\.\d+)%", content)
                if match:
                    rate = float(match.group(1))
                    color = "#40de5a"  # Green for 100%
                    if rate < 80:
                        color = "#f05654"  # Red for <80%
                    elif rate < 100:
                        color = "#ffa400"  # Yellow for other
                    detail_filename = f"{db_name}-{version}-detail.html"
                    html.write(f'<td style="background-color:{color};">{rate}% <a href="{detail_filename}">detail</a></td>')
                    generate_detail_report(logdir, detail_filename, content, version, rate)
                else:
                    html.write("<td>-</td>")
            html.write("</tr>")

        html.write("</tbody></table>")

        time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        html.write(f"<p>This report was generated on {time}.</p>")
        html.write("</body></html>")

def generate_detail_report(logdir, detail_filename, content, version, rate):
    detail_filepath = os.path.join(logdir, detail_filename)
    summary_match = re.search(r"Summary: version: (.*), total tests: (\d+), passed: (\d+), rate: (\d+\.\d+)%", content)
    summary = summary_match.group(0) if summary_match else "Summary not found"
    failed_tests_match = re.search(r"This is failed tests for (.*):\n(.*)", content, re.DOTALL)
    failed_tests = failed_tests_match.group(2) if failed_tests_match else "No failed tests found"

    with open(detail_filepath, "w") as detail_html:
        detail_html.write("""
        <!DOCTYPE html>
        <html>
        <head>
            <title>Test Details</title>
            <style>
                body {font-family: Arial, sans-serif;}
                pre {background-color: #f8f8f8; border: 1px solid #ddd; padding: 10px;}
                .failed-tests {color: red;}
                .summary {font-weight: bold;}
            </style>
        </head>
        <body>
        <h1>Test Details</h1>
        <pre>
        """)
        detail_html.write(content)
        detail_html.write("""
        </pre>
        <div class="summary">
        <h2>Summary</h2>
        <p>""")
        detail_html.write(summary)
        detail_html.write("""
        </p>
        </div>
        <div class="failed-tests">
        <h2>Failed Tests</h2>
        <pre>
        """)
        detail_html.write(failed_tests)
        detail_html.write("""
        </pre>
        </div>
        <a href="index.html">Back to main report</a>
        </body>
        </html>
        """)

def main():
    logdir = "reports"
    config_path = "config/config.yaml"

    # Load configurations
    with open(config_path, 'r') as f:
        configs = yaml.safe_load(f)

    # Generate report
    generate_html_report(logdir, configs)

if __name__ == "__main__":
    main()
